{"ast":null,"code":"// Knowledge Base for b.om Institute Chat Widget\nconst knowledgeBase = {\n  greetings: {\n    patterns: ['hi', 'hello', 'hey', 'good morning', 'good afternoon', 'greetings'],\n    responses: ['Welcome to b.om Institute. How can I help you today?', 'Hello! How can I assist you with b.om Institute today?', 'Welcome! How may I help you with b.om Institute?']\n  },\n  about: {\n    patterns: ['what is b.om', 'about b.om', 'tell me about b.om', 'who are you'],\n    responses: ['b.om Institute is a premier institution focused on technology and innovation education, offering cutting-edge programs and research opportunities.', 'We are a leading educational institution dedicated to excellence in technology, design, and innovation.']\n  },\n  programs: {\n    patterns: ['programs', 'degrees', 'courses', 'what do you offer', 'academics'],\n    responses: ['We offer various programs including:\\n• B.Sc. in Computer Science\\n• M.Sc. in Data Science\\n• Professional Certificates\\n\\nWhich program interests you?', 'Our programs cover:\\n• Software Engineering\\n• Cybersecurity\\n• AI & Machine Learning\\n• UX/UI Design\\n\\nNeed details on any specific program?']\n  },\n  admission: {\n    patterns: ['admission', 'how to apply', 'requirements', 'deadlines', 'enroll'],\n    responses: ['Our admission process includes:\\n1. Online application\\n2. Academic transcripts\\n3. Letters of recommendation\\n4. Statement of purpose\\n\\nWould you like more details?', 'To apply, visit our website or contact admissions for assistance with the application process.']\n  },\n  contact: {\n    patterns: ['contact', 'email', 'phone', 'address', 'location', 'how to reach'],\n    responses: ['You can reach us at:\\n📧 info@bominstitute.edu\\n📞 +1 (555) 987-6543\\n📍 123 Innovation Drive, Tech Valley', 'Contact our team at admissions@bominstitute.edu or call +1 (555) 987-6543 for assistance.']\n  },\n  default: {\n    responses: ['I\\'m here to help! Could you provide more details about your question?', 'I want to make sure I understand. Could you rephrase your question?', 'I\\'d be happy to help with that. Could you provide more context?']\n  }\n};\n\n// Function to find a response based on user input\nexport function getResponse(userInput) {\n  const input = userInput.toLowerCase();\n\n  // Check each category for matching patterns\n  for (const [category, data] of Object.entries(knowledgeBase)) {\n    if (category === 'default') continue;\n    const hasMatch = data.patterns.some(pattern => input.includes(pattern.toLowerCase()));\n    if (hasMatch) {\n      const responses = data.responses;\n      return responses[Math.floor(Math.random() * responses.length)];\n    }\n  }\n\n  // Return a default response if no match found\n  const defaultResponses = knowledgeBase.default.responses;\n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}","map":{"version":3,"names":["knowledgeBase","greetings","patterns","responses","about","programs","admission","contact","default","getResponse","userInput","input","toLowerCase","category","data","Object","entries","hasMatch","some","pattern","includes","Math","floor","random","length","defaultResponses"],"sources":["/private/tmp/bom-chat-widget/src/knowledgeBase.js"],"sourcesContent":["// Knowledge Base for b.om Institute Chat Widget\nconst knowledgeBase = {\n  greetings: {\n    patterns: ['hi', 'hello', 'hey', 'good morning', 'good afternoon', 'greetings'],\n    responses: [\n      'Welcome to b.om Institute. How can I help you today?',\n      'Hello! How can I assist you with b.om Institute today?',\n      'Welcome! How may I help you with b.om Institute?'\n    ]\n  },\n  about: {\n    patterns: ['what is b.om', 'about b.om', 'tell me about b.om', 'who are you'],\n    responses: [\n      'b.om Institute is a premier institution focused on technology and innovation education, offering cutting-edge programs and research opportunities.',\n      'We are a leading educational institution dedicated to excellence in technology, design, and innovation.'\n    ]\n  },\n  programs: {\n    patterns: ['programs', 'degrees', 'courses', 'what do you offer', 'academics'],\n    responses: [\n      'We offer various programs including:\\n• B.Sc. in Computer Science\\n• M.Sc. in Data Science\\n• Professional Certificates\\n\\nWhich program interests you?',\n      'Our programs cover:\\n• Software Engineering\\n• Cybersecurity\\n• AI & Machine Learning\\n• UX/UI Design\\n\\nNeed details on any specific program?'\n    ]\n  },\n  admission: {\n    patterns: ['admission', 'how to apply', 'requirements', 'deadlines', 'enroll'],\n    responses: [\n      'Our admission process includes:\\n1. Online application\\n2. Academic transcripts\\n3. Letters of recommendation\\n4. Statement of purpose\\n\\nWould you like more details?',\n      'To apply, visit our website or contact admissions for assistance with the application process.'\n    ]\n  },\n  contact: {\n    patterns: ['contact', 'email', 'phone', 'address', 'location', 'how to reach'],\n    responses: [\n      'You can reach us at:\\n📧 info@bominstitute.edu\\n📞 +1 (555) 987-6543\\n📍 123 Innovation Drive, Tech Valley',\n      'Contact our team at admissions@bominstitute.edu or call +1 (555) 987-6543 for assistance.'\n    ]\n  },\n  default: {\n    responses: [\n      'I\\'m here to help! Could you provide more details about your question?',\n      'I want to make sure I understand. Could you rephrase your question?',\n      'I\\'d be happy to help with that. Could you provide more context?'\n    ]\n  }\n};\n\n// Function to find a response based on user input\nexport function getResponse(userInput) {\n  const input = userInput.toLowerCase();\n  \n  // Check each category for matching patterns\n  for (const [category, data] of Object.entries(knowledgeBase)) {\n    if (category === 'default') continue;\n    \n    const hasMatch = data.patterns.some(pattern => \n      input.includes(pattern.toLowerCase())\n    );\n    \n    if (hasMatch) {\n      const responses = data.responses;\n      return responses[Math.floor(Math.random() * responses.length)];\n    }\n  }\n  \n  // Return a default response if no match found\n  const defaultResponses = knowledgeBase.default.responses;\n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}\n"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG;EACpBC,SAAS,EAAE;IACTC,QAAQ,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,gBAAgB,EAAE,WAAW,CAAC;IAC/EC,SAAS,EAAE,CACT,sDAAsD,EACtD,wDAAwD,EACxD,kDAAkD;EAEtD,CAAC;EACDC,KAAK,EAAE;IACLF,QAAQ,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,oBAAoB,EAAE,aAAa,CAAC;IAC7EC,SAAS,EAAE,CACT,oJAAoJ,EACpJ,yGAAyG;EAE7G,CAAC;EACDE,QAAQ,EAAE;IACRH,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,CAAC;IAC9EC,SAAS,EAAE,CACT,yJAAyJ,EACzJ,gJAAgJ;EAEpJ,CAAC;EACDG,SAAS,EAAE;IACTJ,QAAQ,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAE,QAAQ,CAAC;IAC9EC,SAAS,EAAE,CACT,wKAAwK,EACxK,gGAAgG;EAEpG,CAAC;EACDI,OAAO,EAAE;IACPL,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,CAAC;IAC9EC,SAAS,EAAE,CACT,4GAA4G,EAC5G,2FAA2F;EAE/F,CAAC;EACDK,OAAO,EAAE;IACPL,SAAS,EAAE,CACT,wEAAwE,EACxE,qEAAqE,EACrE,kEAAkE;EAEtE;AACF,CAAC;;AAED;AACA,OAAO,SAASM,WAAWA,CAACC,SAAS,EAAE;EACrC,MAAMC,KAAK,GAAGD,SAAS,CAACE,WAAW,CAAC,CAAC;;EAErC;EACA,KAAK,MAAM,CAACC,QAAQ,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAChB,aAAa,CAAC,EAAE;IAC5D,IAAIa,QAAQ,KAAK,SAAS,EAAE;IAE5B,MAAMI,QAAQ,GAAGH,IAAI,CAACZ,QAAQ,CAACgB,IAAI,CAACC,OAAO,IACzCR,KAAK,CAACS,QAAQ,CAACD,OAAO,CAACP,WAAW,CAAC,CAAC,CACtC,CAAC;IAED,IAAIK,QAAQ,EAAE;MACZ,MAAMd,SAAS,GAAGW,IAAI,CAACX,SAAS;MAChC,OAAOA,SAAS,CAACkB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGpB,SAAS,CAACqB,MAAM,CAAC,CAAC;IAChE;EACF;;EAEA;EACA,MAAMC,gBAAgB,GAAGzB,aAAa,CAACQ,OAAO,CAACL,SAAS;EACxD,OAAOsB,gBAAgB,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGE,gBAAgB,CAACD,MAAM,CAAC,CAAC;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}